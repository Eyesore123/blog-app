<?php
// Simple security check - you should change this token
$validToken = getenv('ADMIN_SETUP_TOKEN');
$providedToken = $_GET['token'] ?? '';

if (!$validToken || $providedToken !== $validToken) {
    echo "Unauthorized";
    exit(1);
}

echo "<h1>Update Cache Configuration</h1>";

echo "<h2>Current Environment Variables</h2>";
echo "<pre>";
$currentVars = [
    'CACHE_DRIVER' => getenv('CACHE_DRIVER'),
    'SESSION_DRIVER' => getenv('SESSION_DRIVER'),
    'QUEUE_CONNECTION' => getenv('QUEUE_CONNECTION'),
];
print_r($currentVars);
echo "</pre>";

echo "<h2>Updating Environment Variables</h2>";

// Update environment variables
putenv('CACHE_DRIVER=file');
putenv('SESSION_DRIVER=file');
putenv('QUEUE_CONNECTION=sync');

echo "<p>Environment variables updated in memory.</p>";

// Update .env file
$envPath = __DIR__ . '/../.env';
if (file_exists($envPath)) {
    $envContent = file_get_contents($envPath);
    
    // Create a backup
    $backupPath = $envPath . '.backup-' . date('Y-m-d-H-i-s');
    file_put_contents($backupPath, $envContent);
    echo "<p>Created backup of .env file at: $backupPath</p>";
    
    // Update CACHE_DRIVER
    $envContent = preg_replace('/^CACHE_DRIVER=.*$/m', 'CACHE_DRIVER=file', $envContent);
    
    // Update SESSION_DRIVER
    $envContent = preg_replace('/^SESSION_DRIVER=.*$/m', 'SESSION_DRIVER=file', $envContent);
    
    // Update QUEUE_CONNECTION
    $envContent = preg_replace('/^QUEUE_CONNECTION=.*$/m', 'QUEUE_CONNECTION=sync', $envContent);
    
    // Write the updated .env file
    if (file_put_contents($envPath, $envContent)) {
        echo "<p>.env file updated successfully.</p>";
    } else {
        echo "<p>Failed to update .env file. Check permissions.</p>";
    }
} else {
    echo "<p>.env file not found.</p>";
}

// Update config files
$cacheConfigPath = __DIR__ . '/../config/cache.php';
if (file_exists($cacheConfigPath)) {
    $cacheContent = file_get_contents($cacheConfigPath);
    
    // Create a backup
    $backupPath = $cacheConfigPath . '.backup-' . date('Y-m-d-H-i-s');
    file_put_contents($backupPath, $cacheContent);
    echo "<p>Created backup of cache.php file at: $backupPath</p>";
    
    // Update default cache store
    $cacheContent = preg_replace(
        "/'default' => env\('CACHE_DRIVER', '.*?'\),/",
        "'default' => env('CACHE_DRIVER', 'file'),",
        $cacheContent
    );
    
    // Write the updated cache.php file
    if (file_put_contents($cacheConfigPath, $cacheContent)) {
        echo "<p>cache.php file updated successfully.</p>";
    } else {
        echo "<p>Failed to update cache.php file. Check permissions.</p>";
    }
} else {
    echo "<p>cache.php file not found.</p>";
}

$sessionConfigPath = __DIR__ . '/../config/session.php';
if (file_exists($sessionConfigPath)) {
    $sessionContent = file_get_contents($sessionConfigPath);
    
    // Create a backup
    $backupPath = $sessionConfigPath . '.backup-' . date('Y-m-d-H-i-s');
    file_put_contents($backupPath, $sessionContent);
    echo "<p>Created backup of session.php file at: $backupPath</p>";
    
    // Update default session driver
    $sessionContent = preg_replace(
        "/'driver' => env\('SESSION_DRIVER', '.*?'\),/",
        "'driver' => env('SESSION_DRIVER', 'file'),",
        $sessionContent
    );
    
    // Write the updated session.php file
    if (file_put_contents($sessionConfigPath, $sessionContent)) {
        echo "<p>session.php file updated successfully.</p>";
    } else {
        echo "<p>Failed to update session.php file. Check permissions.</p>";
    }
} else {
    echo "<p>session.php file not found.</p>";
}

echo "<h2>Updated Environment Variables</h2>";
echo "<pre>";
$updatedVars = [
    'CACHE_DRIVER' => getenv('CACHE_DRIVER'),
    'SESSION_DRIVER' => getenv('SESSION_DRIVER'),
    'QUEUE_CONNECTION' => getenv('QUEUE_CONNECTION'),
];
print_r($updatedVars);
echo "</pre>";

echo "<h2>Clear Cache</h2>";
echo "<pre>";
$output = [];
$return_var = 0;
exec('cd ' . __DIR__ . '/../ && php artisan cache:clear', $output, $return_var);
print_r($output);
echo "</pre>";
echo "<p>Return code: $return_var</p>";

echo "<h2>Clear Config Cache</h2>";
echo "<pre>";
$output = [];
$return_var = 0;
exec('cd ' . __DIR__ . '/../ && php artisan config:clear', $output, $return_var);
print_r($output);
echo "</pre>";
echo "<p>Return code: $return_var</p>";

echo "<h2>Create Bootstrap Cache Override</h2>";
$bootstrapPath = __DIR__ . '/../bootstrap/cache_override.php';
$bootstrapContent = <<<EOD
<?php
// This file is automatically generated to override cache configuration

// Force file cache driver
\$app = app();
\$app->make('config')->set('cache.default', 'file');
\$app->make('config')->set('session.driver', 'file');
\$app->make('config')->set('queue.default', 'sync');
EOD;

// Write the bootstrap file
if (file_put_contents($bootstrapPath, $bootstrapContent)) {
    echo "<p>Cache override file created at: $bootstrapPath</p>";
} else {
    echo "<p>Failed to create cache override file. Check permissions.</p>";
}

// Modify the bootstrap/app.php file to include our cache override
$appPath = __DIR__ . '/../bootstrap/app.php';
$appContent = file_get_contents($appPath);
$appBackupPath = $appPath . '.cache-backup-' . date('Y-m-d-H-i-s');

// Backup the original file
if (file_exists($appPath)) {
    copy($appPath, $appBackupPath);
    echo "<p>Original app.php backed up to: $appBackupPath</p>";
}

// Check if the cache override is already included
if (strpos($appContent, 'cache_override.php') === false) {
    // Find the position to insert our code
    $returnPos = strpos($appContent, 'return $app;');
    
    if ($returnPos !== false) {
        $newContent = substr($appContent, 0, $returnPos);
        $newContent .= <<<'EOD'
// Include cache override file
if (file_exists(__DIR__ . '/cache_override.php')) {
    require __DIR__ . '/cache_override.php';
}

EOD;
        $newContent .= substr($appContent, $returnPos);
        
        // Write the modified app.php
        if (file_put_contents($appPath, $newContent)) {
            echo "<p>bootstrap/app.php modified to include cache override file.</p>";
        } else {
            echo "<p>Failed to modify bootstrap/app.php. Check permissions.</p>";
        }
    } else {
        echo "<p>Could not find the return statement in bootstrap/app.php.</p>";
    }
} else {
    echo "<p>bootstrap/app.php already includes the cache override file.</p>";
}

echo "<p>Done. <a href='/'>Go to homepage</a></p>";
